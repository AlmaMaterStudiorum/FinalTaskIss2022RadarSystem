/* Generated by AN DISI Unibo */ 
package it.unibo.sonar

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Sonar ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "initState"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		 var Dist = 0 	 
		return { //this:ActionBasciFsm
				state("initState") { //this:State
					action { //it:State
						println("Enter initState")
					}
					 transition( edgeName="goto",targetState="waitforrequest", cond=doswitch() )
				}	 
				state("waitforrequest") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
					}
					 transition(edgeName="t02",targetState="handlerequestfromcontroller",cond=whenRequest("coordrequest"))
					transition(edgeName="t03",targetState="handlerequestfromsonar",cond=whenEvent("sonarrobot"))
				}	 
				state("handlerequestfromcontroller") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						println("Dist : $Dist")
						answer("coordrequest", "coordresponse", "coordresponse($Dist)"   )  
					}
					 transition( edgeName="goto",targetState="waitforrequest", cond=doswitch() )
				}	 
				state("handlerequestfromsonar") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						if( checkMsgContent( Term.createTerm("sonarrobot(X)"), Term.createTerm("sonarrobot(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 Dist = payloadArg(0).toInt()    
								println("Dist : $Dist")
						}
					}
					 transition( edgeName="goto",targetState="waitforrequest", cond=doswitch() )
				}	 
			}
		}
}
